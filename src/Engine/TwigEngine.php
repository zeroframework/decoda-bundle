<?php
namespace Engine;

use Decoda\Engine\AbstractEngine;
use interfaces\containerAwaireInterface;

class TwigEngine extends AbstractEngine implements containerAwaireInterface
{
    private $container;

    public function __construct($container)
    {
        $this->setContainer($container);

        parent::__construct(array()); // TODO: Change the autogenerated stub
    }

    /**
     * Renders the tag by using the defined templates.
     *
     * @param array $tag
     * @param string $content
     * @return string
     */
    public function render(array $tag, $content)
    {
        $setup = $this->getFilter()->getTag($tag['tag']);

        $tag["attributes"] = array_merge($tag["attributes"], array("content" => $content));

        return $this->getContainer()->get("twig")->render($setup["template"].".html.twig", $tag["attributes"]);
    }

    public function setContainer($container)
    {
        $this->container = $container;
    }

    /**
     * @return \serviceContainer
     */
    public function getContainer()
    {
        return $this->container;
    }
}

?>